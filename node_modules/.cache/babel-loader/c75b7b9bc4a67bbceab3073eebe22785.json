{"ast":null,"code":"var _jsxFileName = \"/home/developer/workspace/learnreactjs/react_starter/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor() {\n    super(); // Formal Approch to bind the handler\n\n    this.state = {\n      count: 1,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n    this.handleIncrement = this.handleIncrement.bind(this);\n  }\n\n  handleIncrement() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgetClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: this.handleIncrement,\n      className: \"btn btn-primary px-3 btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Increment\"), this.renderTags());\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"There is not tags\");\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, tag)));\n  }\n\n  getBadgetClasses() {\n    let classes = \"badge  px-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/developer/workspace/learnreactjs/react_starter/src/components/counter.jsx"],"names":["React","Component","Counter","constructor","state","count","tags","handleIncrement","bind","setState","render","getBadgetClasses","formatCount","renderTags","length","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAO5BE,EAAAA,WAAW,GAAG;AACV,YADU,CAGV;;AAHU,SALdC,KAKc,GALN;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFF,KAKM;AAIV,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDD,EAAAA,eAAe,GAAG;AACd,SAAKE,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,KAAd;AACH;;AAEDK,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAG,KAAKC,gBAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6C,KAAKC,WAAL,EAA7C,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKL,eAAtB;AAAuC,MAAA,SAAS,EAAC,6BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGK,KAAKM,UAAL,EAHL,CADJ;AAOH;;AAEDA,EAAAA,UAAU,GAAG;AAET,QAAI,KAAKT,KAAL,CAAWE,IAAX,CAAgBQ,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AAElC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWE,IAAX,CAAgBS,GAAhB,CAAoBC,GAAG,IAAI;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAA3B,CAAL,CAAP;AACH;;AAEDL,EAAAA,gBAAgB,GAAG;AACf,QAAIM,OAAO,GAAG,oBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKb,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOY,OAAP;AACH;;AAEDL,EAAAA,WAAW,GAAG;AAAA,UACFP,KADE,GACQ,KAAKD,KADb,CACFC,KADE;AAEV,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AA7C2B;;AAkDhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n\n    state = {\n        count: 1,\n        tags: ['tag1', 'tag2', 'tag3']\n    }\n\n    constructor() {\n        super();\n\n        // Formal Approch to bind the handler\n        this.handleIncrement = this.handleIncrement.bind(this);\n    }\n\n    handleIncrement() {\n        this.setState({ count: this.state.count + 1})\n    }\n\n    render() {\n\n        return (\n            <div>\n                <span className={ this.getBadgetClasses() }>{this.formatCount()}</span>\n                <button onClick={this.handleIncrement} className=\"btn btn-primary px-3 btn-sm\">Increment</button>\n                {this.renderTags()}\n            </div>\n            );\n    }\n\n    renderTags() {\n\n        if (this.state.tags.length === 0) return <p>There is not tags</p>\n \n        return <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n    }\n\n    getBadgetClasses() {\n        let classes = \"badge  px-2 badge-\";\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\"; \n        return classes;\n    }\n\n    formatCount() {\n        const { count } = this.state;\n        return count === 0 ? \"Zero\" : count;\n    }\n}\n\n\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}